# ... Zookeeper
apiVersion: v1
kind: Service
metadata:
  labels:
    app: zookeeper-service
  name: zookeeper-service
spec:
  type: NodePort
  ports:
    - name: zookeeper-port
      port: 2181
      nodePort: 30181
      targetPort: 2181
  selector:
    app: zookeeper
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: zookeeper
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: "2181"
            - name: ZOOKEEPER_TICK_TIME
              value: "2000"
          image: confluentinc/cp-zookeeper:7.3.3
          imagePullPolicy: IfNotPresent
          name: zookeeper
          ports:
            - containerPort: 2181
---
# ... Kafka
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kafka-service
  name: kafka-service
spec:
  ports:
    - name: kafka-port
      port: 9092
      protocol: TCP
      targetPort: 9092
  selector:
    app: kafka-broker
  clusterIP: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafka-broker
  name: kafka-broker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-broker
  template:
    metadata:
      labels:
        app: kafka-broker
    spec:
      containers:
        - env:
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper-service:2181
            - name: KAFKA_LISTENERS
              value: LISTENER_INTERNAL://kafka-service:9092,LISTENER_EXTERNAL://localhost:9093
            - name: KAFKA_ADVERTISED_LISTENERS
              value: LISTENER_INTERNAL://kafka-service:9092,LISTENER_EXTERNAL://localhost:9093
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: LISTENER_INTERNAL:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: LISTENER_INTERNAL
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
              value: "0"
            - name: KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_JMX_PORT
              value: "9101"
            - name: KAFKA_METRIC_REPORTERS
              value: io.confluent.metrics.reporter.ConfluentMetricsReporter
            - name: CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS
              value: kafka-service:9092
            - name: CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT
              value: zookeeper-service:2181
            - name: CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS
              value: "1"
            - name: CONFLUENT_METRICS_ENABLE
              value: "true"
            - name: CONFLUENT_SUPPORT_CUSTOMER_ID
              value: "anonymous"
          image: confluentinc/cp-server:7.3.3
          imagePullPolicy: IfNotPresent
          name: kafka-broker
          ports:
            - containerPort: 9092
---
# ... Control center
#ClusterIP type makes Pods accessible only to other Pods,
#LoadBalancer for users outside the cluster.
apiVersion: v1
kind: Service
metadata:
  labels:
    app: control-center-service
  name: control-center-service
spec:
  ports:
    - port: 9021
      protocol: TCP
      targetPort: 9021
  selector:
    app: control-center
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: control-center
  name: control-center
spec:
  replicas: 1
  selector:
    matchLabels:
      app: control-center
  template:
    metadata:
      labels:
        app: control-center
    spec:
      containers:
        - env:
            - name: CONTROL_CENTER_BOOTSTRAP_SERVERS
              value: kafka-service:9092
            - name: CONTROL_CENTER_ZOOKEEPER_CONNECT
              value: zookeeper-service:2181
            - name: CONTROL_CENTER_REPLICATION_FACTOR
              value: "1"
            - name: CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS
              value: "1"
            - name: CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS
              value: "1"
            - name: CONFLUENT_METRICS_TOPIC_REPLICATION
              value: "1"
            - name: PORT
              value: "9021"
          image: confluentinc/cp-enterprise-control-center:7.3.3
          imagePullPolicy: IfNotPresent
          name: control-center
          ports:
            - containerPort: 9021
---
# ... Application
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minikube-confluent-kafka-spring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minikube-confluent-kafka-spring
  template:
    metadata:
      labels:
        app: minikube-confluent-kafka-spring
    spec:
      containers:
        - env:
            - name: SPRING_PROFILES_ACTIVE
              value: k8s
          name: minikube-confluent-kafka-spring
          image: aqua-len/minikube-confluent-kafka-spring
          ports:
            - containerPort: 8080
          imagePullPolicy: Never